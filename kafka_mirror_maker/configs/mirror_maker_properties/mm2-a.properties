# Licensed to the Apache Software Foundation (ASF) under A or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# see org.apache.kafka.clients.consumer.ConsumerConfig for more details

# Sample MirrorMaker 2.0 top-level configuration file
# Run with ./bin/connect-mirror-maker.sh connect-mirror-maker.properties

# specify any number of cluster aliases
clusters = A, B

# connection information for each cluster
# This is a comma separated host:port pairs for each cluster
A.bootstrap.servers = kafka1-a:9092, kafka2-a:9092, kafka3-a:9092
B.bootstrap.servers = kafka1-b:9092, kafka2-b:9092, kafka3-b:9092

# enable and configure individual replication flows
A->B.enabled = true
B->A.enabled = true

A->B.topics = topic-a, topic-b
B->A.topics = topic-a, topic-b

A->B.sync.topics.configs.enabled = true
B->A.sync.topics.configs.enabled = true

# Configure from when the MM2 shuld start replicating data
A->B.consumer.auto.offset.reset = latest
B->A.consumer.auto.offset.reset = latest

# Sync consumer group offsets
A->B.exclude.internal.topics = false
A->B.emit.heartbeats.enabled = true

B->A.exclude.internal.topics = false
B->A.emit.heartbeats.enabled = true

# Enable automated consumer offset sync
A->B.sync.group.offsets.enabled = true
A->B.emit.checkpoints.enabled = true

B->A.sync.group.offsets.enabled = true
B->A.emit.checkpoints.enabled = true

replication.factor = 3

# Key configuration to remove prefixes
replication.policy.class=org.apache.kafka.connect.mirror.IdentityReplicationPolicy

# Offset and checkpoint settings
emit.checkpoints.interval.seconds = 10
refresh.topics.interval.seconds = 10
refresh.groups.interval.seconds = 10
sync.topic.configs.interval.seconds = 10

# Converters
header.converter = org.apache.kafka.connect.converters.ByteArrayConverter
value.converter = org.apache.kafka.connect.converters.ByteArrayConverter
key.converter = org.apache.kafka.connect.converters.ByteArrayConverter

# Enable and configure offset tracking (important for active-active)
emit.checkpoints.enabled = true
sync.group.offsets.enabled = true
sync.group.offsets.interval.seconds = 10

############################# Optimize Configs  #############################
# Controls how many MirrorSourceConnector tasks run per replication flow
# If topic-a has 12 partitions, set tasks.max=12 for best performance.
tasks.max = 24

############################# Internal Topic Settings  #############################
# Setting replication factor of newly created remote topics
replication.factor = -1

# The replication factor for mm2 internal topics "heartbeats", "B.checkpoints.internal" and
# "mm2-offset-syncs.B.internal"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
checkpoints.topic.replication.factor = -1
# heartbeats.topic.replication.factor = -1
offset-syncs.topic.replication.factor = -1

# The replication factor for connect internal topics "mm2-configs.B.internal", "mm2-offsets.B.internal" and
# "mm2-status.B.internal"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
config.storage.replication.factor = -1
offset.storage.replication.factor = -1
status.storage.replication.factor = -1

offset.flush.timeout.ms = 60000

# SASL Configurations
# B.security.protocol=SASL_PLAINTEXT
# B.sasl.mechanism=SCRAM-SHA-256
# B.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="xxxxx";

# A.security.protocol=SASL_PLAINTEXT
# A.sasl.mechanism=SCRAM-SHA-256
# A.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="yyyyy";
